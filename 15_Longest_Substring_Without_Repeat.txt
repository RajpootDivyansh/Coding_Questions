3. Longest Substring Without Repeating Characters

Given a string s, find the length of the longest substring without duplicate characters.

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int n = s.size();
        if (n == 0) return 0; 

        int countmax = 1; 

        for (int i = 0; i < n; i++) {
            bool tellme[256];
            for (int k = 0; k < 256; k++) {
                tellme[k] = false; 
            }

            int countnow = 0;

            for (int j = i; j < n; j++) {
                if (tellme[s[j]]) {
                    break;
                }
                tellme[s[j]] = true; 
                countnow++;
                countmax = max(countmax, countnow);
            }
        }
        return countmax;
    }
};
